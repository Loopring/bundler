/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  VerifyingPaymaster,
  VerifyingPaymasterInterface,
} from "../VerifyingPaymaster";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IEntryPoint",
        name: "_entryPoint",
        type: "address",
      },
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "userOpHash",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "valueOfEth",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "actualTokenCost",
        type: "uint256",
      },
    ],
    name: "PaymasterEvent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "previousAdminRole",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "newAdminRole",
        type: "bytes32",
      },
    ],
    name: "RoleAdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleGranted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleRevoked",
    type: "event",
  },
  {
    inputs: [],
    name: "DEFAULT_ADMIN_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SIGNER",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ERC20",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "addDepositFor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "unstakeDelaySec",
        type: "uint32",
      },
    ],
    name: "addStake",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ERC20",
        name: "token",
        type: "address",
      },
    ],
    name: "addToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ERC20",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balances",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ERC20",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "depositInfo",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_unlockBlock",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "entryPoint",
    outputs: [
      {
        internalType: "contract IEntryPoint",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getDeposit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "callGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "verificationGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxFeePerGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPriorityFeePerGas",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct UserOperation",
        name: "userOp",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "packedData",
        type: "bytes",
      },
    ],
    name: "getHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
    ],
    name: "getRoleAdmin",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "grantRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "hasRole",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lockTokenDeposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum IPaymaster.PostOpMode",
        name: "mode",
        type: "uint8",
      },
      {
        internalType: "bytes",
        name: "context",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "actualGasCost",
        type: "uint256",
      },
    ],
    name: "postOp",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ERC20",
        name: "",
        type: "address",
      },
    ],
    name: "registeredToken",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "renounceRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "revokeRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IEntryPoint",
        name: "_entryPoint",
        type: "address",
      },
    ],
    name: "setEntryPoint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "unlockBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "unlockStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unlockTokenDeposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "callGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "verificationGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxFeePerGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPriorityFeePerGas",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct UserOperation",
        name: "userOp",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "userOpHash",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "requiredPreFund",
        type: "uint256",
      },
    ],
    name: "validatePaymasterUserOp",
    outputs: [
      {
        internalType: "bytes",
        name: "context",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "sigTimeRange",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "withdrawAddress",
        type: "address",
      },
    ],
    name: "withdrawStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "withdrawAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdrawTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ERC20",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdrawTokensTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x6080604052614e206003553480156200001757600080fd5b5060405162002786380380620027868339810160408190526200003a9162000257565b816200004633620000bc565b62000051816200010c565b506200005d81620000bc565b6200007c6000620000766000546001600160a01b031690565b62000138565b620000b47f2aeb38be3df14d720aeb10a2de6df09b0fb3cd5c5ec256283a22d4593110ca40620000766000546001600160a01b031690565b505062000296565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b62000116620001dd565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b60008281526002602090815260408083206001600160a01b038516845290915290205460ff16620001d95760008281526002602090815260408083206001600160a01b03851684529091529020805460ff19166001179055620001983390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b6000546001600160a01b031633146200023c5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640160405180910390fd5b565b6001600160a01b03811681146200025457600080fd5b50565b600080604083850312156200026b57600080fd5b825162000278816200023e565b60208401519092506200028b816200023e565b809150509250929050565b6124e080620002a66000396000f3fe6080604052600436106101dc5760003560e01c8063961d012211610102578063c399ec8811610095578063d48bfca711610064578063d48bfca71461060e578063d547741f1461062e578063f2fde38b1461064e578063f465c77e1461066e57600080fd5b8063c399ec88146105af578063cc9c837c146105c4578063cd8f80c2146105e4578063d0e30db01461060657600080fd5b8063b0d691fe116100d1578063b0d691fe14610522578063bb9fe6bf14610542578063c23a5cea14610557578063c23f001f1461057757600080fd5b8063961d0122146104a95780639ed0fb68146104c9578063a217fddf146104ed578063a9a234091461050257600080fd5b80633c89c4901161017a578063584465f211610149578063584465f214610422578063715018a6146104425780638da5cb5b1461045757806391d148541461048957600080fd5b80633c89c4901461032a578063493b01701461035a5780634a6f84cf146103c1578063582abd12146103ee57600080fd5b8063248a9ca3116101b6578063248a9ca31461028c5780632f2ff15d146102ca57806336568abe146102ea578063382edd9e1461030a57600080fd5b806301ffc9a7146102225780630396cb6014610257578063205c28781461026c57600080fd5b3661021d5760405162461bcd60e51b815260206004820152600c60248201526b195d1a081c995a9958dd195960a21b60448201526064015b60405180910390fd5b600080fd5b34801561022e57600080fd5b5061024261023d366004611c9c565b61069c565b60405190151581526020015b60405180910390f35b61026a610265366004611cc6565b6106d3565b005b34801561027857600080fd5b5061026a610287366004611d01565b610742565b34801561029857600080fd5b506102bc6102a7366004611d2d565b60009081526002602052604090206001015490565b60405190815260200161024e565b3480156102d657600080fd5b5061026a6102e5366004611d46565b610798565b3480156102f657600080fd5b5061026a610305366004611d46565b6107c2565b34801561031657600080fd5b5061026a610325366004611d76565b610840565b34801561033657600080fd5b50610242610345366004611db7565b60046020526000908152604090205460ff1681565b34801561036657600080fd5b506103ac610375366004611dd4565b6001600160a01b03918216600090815260056020908152604080832093909416825291825282812054600690925291909120549091565b6040805192835260208301919091520161024e565b3480156103cd57600080fd5b506102bc6103dc366004611db7565b60066020526000908152604090205481565b3480156103fa57600080fd5b506102bc7f2aeb38be3df14d720aeb10a2de6df09b0fb3cd5c5ec256283a22d4593110ca4081565b34801561042e57600080fd5b5061026a61043d366004611db7565b610912565b34801561044e57600080fd5b5061026a61093c565b34801561046357600080fd5b506000546001600160a01b03165b6040516001600160a01b03909116815260200161024e565b34801561049557600080fd5b506102426104a4366004611d46565b610950565b3480156104b557600080fd5b506102bc6104c4366004611ebe565b61097b565b3480156104d557600080fd5b5061026a336000908152600660205260409020439055565b3480156104f957600080fd5b506102bc600081565b34801561050e57600080fd5b5061026a61051d366004611f22565b610a1e565b34801561052e57600080fd5b50600154610471906001600160a01b031681565b34801561054e57600080fd5b5061026a610a38565b34801561056357600080fd5b5061026a610572366004611db7565b610aa4565b34801561058357600080fd5b506102bc610592366004611dd4565b600560209081526000928352604080842090915290825290205481565b3480156105bb57600080fd5b506102bc610b0e565b3480156105d057600080fd5b5061026a6105df366004611d76565b610b80565b3480156105f057600080fd5b5061026a33600090815260066020526040812055565b61026a610c57565b34801561061a57600080fd5b5061026a610629366004611db7565b610c9d565b34801561063a57600080fd5b5061026a610649366004611d46565b610cef565b34801561065a57600080fd5b5061026a610669366004611db7565b610d14565b34801561067a57600080fd5b5061068e610689366004611fb1565b610d8d565b60405161024e92919061204f565b60006001600160e01b03198216637965db0b60e01b14806106cd57506301ffc9a760e01b6001600160e01b03198316145b92915050565b6106db6111e9565b600154604051621cb65b60e51b815263ffffffff831660048201526001600160a01b0390911690630396cb609034906024016000604051808303818588803b15801561072657600080fd5b505af115801561073a573d6000803e3d6000fd5b505050505050565b61074a6111e9565b60015460405163040b850f60e31b81526001600160a01b038481166004830152602482018490529091169063205c287890604401600060405180830381600087803b15801561072657600080fd5b6000828152600260205260409020600101546107b381611243565b6107bd838361124d565b505050565b6001600160a01b03811633146108325760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b6064820152608401610214565b61083c82826112d3565b5050565b6108556001600160a01b03841633308461133a565b6001600160a01b03831660009081526004602052604090205460ff166108b15760405162461bcd60e51b81526020600482015260116024820152703ab739bab83837b93a32b2103a37b5b2b760791b6044820152606401610214565b6001600160a01b038084166000908152600560209081526040808320938616835292905290812080548392906108e8908490612087565b90915550506001600160a01b03821633036107bd576107bd33600090815260066020526040812055565b61091a6111e9565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6109446111e9565b61094e60006113a5565b565b60009182526002602090815260408084206001600160a01b0393909316845291905290205460ff1690565b600082356020840135610991604086018661209a565b60405161099f9291906120e1565b6040519081900390206109b5606087018761209a565b6040516109c39291906120e1565b604051908190038120610a009493929160808901359060a08a01359060c08b01359060e08c0135906101008d013590469030908e906020016120f1565b60405160208183030381529060405280519060200120905092915050565b610a266113f5565b610a328484848461140c565b50505050565b610a406111e9565b600160009054906101000a90046001600160a01b03166001600160a01b031663bb9fe6bf6040518163ffffffff1660e01b8152600401600060405180830381600087803b158015610a9057600080fd5b505af1158015610a32573d6000803e3d6000fd5b610aac6111e9565b60015460405163611d2e7560e11b81526001600160a01b0383811660048301529091169063c23a5cea90602401600060405180830381600087803b158015610af357600080fd5b505af1158015610b07573d6000803e3d6000fd5b5050505050565b6001546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015610b57573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b7b919061216a565b905090565b3360009081526006602052604090205415801590610bac57503360009081526006602052604090205443115b610c0a5760405162461bcd60e51b815260206004820152602960248201527f4465706f7369745061796d61737465723a206d75737420756e6c6f636b546f6b604482015268195b91195c1bdcda5d60ba1b6064820152608401610214565b6001600160a01b038316600090815260056020908152604080832033845290915281208054839290610c3d908490612183565b909155506107bd90506001600160a01b038416838361159c565b60015460405163b760faf960e01b81523060048201526001600160a01b039091169063b760faf99034906024016000604051808303818588803b158015610af357600080fd5b610ca56111e9565b6001600160a01b03811660009081526004602052604090205460ff1615610ccb57600080fd5b6001600160a01b03166000908152600460205260409020805460ff19166001179055565b600082815260026020526040902060010154610d0a81611243565b6107bd83836112d3565b610d1c6111e9565b6001600160a01b038116610d815760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610214565b610d8a816113a5565b50565b606060003681610da161012088018861209a565b915091506000610daf883590565b9050610de5604051806080016040528060006001600160a01b031681526020016000815260200160008152602001606081525090565b610df28360148187612196565b810190610dff91906121c0565b60608501526040808501919091526020808501929092526001600160a01b03928316845291841660009081526006909152205415610e8b5760405162461bcd60e51b8152602060048201526024808201527f4465706f7369745061796d61737465723a206465706f736974206e6f74206c6f60448201526318dad95960e21b6064820152608401610214565b80606001515160401480610ea457508060600151516041145b610f18576040805162461bcd60e51b81526020600482015260248101919091527f566572696679696e675061796d61737465723a20696e76616c6964207369676e60448201527f6174757265206c656e67746820696e207061796d6173746572416e64446174616064820152608401610214565b6000600354610f268b6115cc565b610f309190612223565b602083015190915015611067576020820151600090610f516008600a61231e565b610f5b848c612087565b610f659190612223565b610f6f919061232d565b83516001600160a01b039081166000908152600560209081526040808320938916835292905220549091508111158061101957508251604051636eb1769f60e11b81526001600160a01b0386811660048301523060248301528392169063dd62ed3e90604401602060405180830381865afa158015610ff2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611016919061216a565b10155b6110655760405162461bcd60e51b815260206004820152601f60248201527f5061796d61737465723a206e6f7420656e6f75676820616c6c6f77616e6365006044820152606401610214565b505b60006110c78b8460000151856020015186604001516040516020016110b39392919060609390931b6bffffffffffffffffffffffff191683526014830191909152603482015260540190565b60405160208183030381529060405261097b565b90506111527f2aeb38be3df14d720aeb10a2de6df09b0fb3cd5c5ec256283a22d4593110ca406104a4856060015161114c856040517f19457468657265756d205369676e6564204d6573736167653a0a3332000000006020820152603c8101829052600090605c01604051602081830303815290604052805190602001209050919050565b906115fb565b6111785760016040518060200160405280600081525090975097505050505050506111e1565b8251602080850151604080519283018e90526001600160a01b038089169184019190915290921660608201526080810184905260a081019190915260c0016040516020818303038152906040526111d660008560400151600061161f565b975097505050505050505b935093915050565b6000546001600160a01b0316331461094e5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610214565b610d8a8133611649565b6112578282610950565b61083c5760008281526002602090815260408083206001600160a01b03851684529091529020805460ff1916600117905561128f3390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6112dd8282610950565b1561083c5760008281526002602090815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b6040516001600160a01b0380851660248301528316604482015260648101829052610a329085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091526116a2565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001546001600160a01b0316331461094e57600080fd5b60008080808061141e8789018961234f565b94509450945094509450600080821115611544578161143f6008600a61231e565b611449858a612087565b6114539190612223565b61145d919061232d565b6001600160a01b038086166000908152600560209081526040808320938a168352929052205490915081116114ce576001600160a01b038085166000908152600560209081526040808320938916835292905290812080548392906114c3908490612183565b909155506114e39050565b6114e36001600160a01b03851686308461133a565b6001600160a01b0384166000908152600560205260408120829161150f6000546001600160a01b031690565b6001600160a01b03166001600160a01b03168152602001908152602001600020600082825461153e9190612087565b90915550505b604080516001600160a01b03861681526020810184905290810182905286907f652bee3205998d1f8c65b6c88839605bed2748c59d2b6e17bcfbc901b36a14fb9060600160405180910390a250505050505050505050565b6040516001600160a01b0383166024820152604481018290526107bd90849063a9059cbb60e01b9060640161136e565b600060e08201356101008301358082036115e7575092915050565b6115f382488301611774565b949350505050565b600080600061160a858561178a565b91509150611617816117cf565b509392505050565b6000604882901b600884901b8561163757600061163a565b60015b60ff16171790505b9392505050565b6116538282610950565b61083c5761166081611919565b61166b83602061192b565b60405160200161167c9291906123a1565b60408051601f198184030181529082905262461bcd60e51b825261021491600401612416565b60006116f7826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316611ac79092919063ffffffff16565b8051909150156107bd57808060200190518101906117159190612429565b6107bd5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610214565b60008183106117835781611642565b5090919050565b60008082516041036117c05760208301516040840151606085015160001a6117b487828585611ad6565b945094505050506117c8565b506000905060025b9250929050565b60008160048111156117e3576117e361244b565b036117eb5750565b60018160048111156117ff576117ff61244b565b0361184c5760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e617475726500000000000000006044820152606401610214565b60028160048111156118605761186061244b565b036118ad5760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606401610214565b60038160048111156118c1576118c161244b565b03610d8a5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608401610214565b60606106cd6001600160a01b03831660145b6060600061193a836002612223565b611945906002612087565b67ffffffffffffffff81111561195d5761195d611e1b565b6040519080825280601f01601f191660200182016040528015611987576020820181803683370190505b509050600360fc1b816000815181106119a2576119a2612461565b60200101906001600160f81b031916908160001a905350600f60fb1b816001815181106119d1576119d1612461565b60200101906001600160f81b031916908160001a90535060006119f5846002612223565b611a00906001612087565b90505b6001811115611a78576f181899199a1a9b1b9c1cb0b131b232b360811b85600f1660108110611a3457611a34612461565b1a60f81b828281518110611a4a57611a4a612461565b60200101906001600160f81b031916908160001a90535060049490941c93611a7181612477565b9050611a03565b5083156116425760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610214565b60606115f38484600085611b9a565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0831115611b0d5750600090506003611b91565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015611b61573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116611b8a57600060019250925050611b91565b9150600090505b94509492505050565b6060843b611bea5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610214565b600080866001600160a01b03168587604051611c06919061248e565b60006040518083038185875af1925050503d8060008114611c43576040519150601f19603f3d011682016040523d82523d6000602084013e611c48565b606091505b5091509150611c58828286611c63565b979650505050505050565b60608315611c72575081611642565b825115611c825782518084602001fd5b8160405162461bcd60e51b81526004016102149190612416565b600060208284031215611cae57600080fd5b81356001600160e01b03198116811461164257600080fd5b600060208284031215611cd857600080fd5b813563ffffffff8116811461164257600080fd5b6001600160a01b0381168114610d8a57600080fd5b60008060408385031215611d1457600080fd5b8235611d1f81611cec565b946020939093013593505050565b600060208284031215611d3f57600080fd5b5035919050565b60008060408385031215611d5957600080fd5b823591506020830135611d6b81611cec565b809150509250929050565b600080600060608486031215611d8b57600080fd5b8335611d9681611cec565b92506020840135611da681611cec565b929592945050506040919091013590565b600060208284031215611dc957600080fd5b813561164281611cec565b60008060408385031215611de757600080fd5b8235611df281611cec565b91506020830135611d6b81611cec565b60006101608284031215611e1557600080fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b600082601f830112611e4257600080fd5b813567ffffffffffffffff80821115611e5d57611e5d611e1b565b604051601f8301601f19908116603f01168101908282118183101715611e8557611e85611e1b565b81604052838152866020858801011115611e9e57600080fd5b836020870160208301376000602085830101528094505050505092915050565b60008060408385031215611ed157600080fd5b823567ffffffffffffffff80821115611ee957600080fd5b611ef586838701611e02565b93506020850135915080821115611f0b57600080fd5b50611f1885828601611e31565b9150509250929050565b60008060008060608587031215611f3857600080fd5b843560038110611f4757600080fd5b9350602085013567ffffffffffffffff80821115611f6457600080fd5b818701915087601f830112611f7857600080fd5b813581811115611f8757600080fd5b886020828501011115611f9957600080fd5b95986020929092019750949560400135945092505050565b600080600060608486031215611fc657600080fd5b833567ffffffffffffffff811115611fdd57600080fd5b611fe986828701611e02565b9660208601359650604090950135949350505050565b60005b8381101561201a578181015183820152602001612002565b50506000910152565b6000815180845261203b816020860160208601611fff565b601f01601f19169290920160200192915050565b6040815260006120626040830185612023565b90508260208301529392505050565b634e487b7160e01b600052601160045260246000fd5b808201808211156106cd576106cd612071565b6000808335601e198436030181126120b157600080fd5b83018035915067ffffffffffffffff8211156120cc57600080fd5b6020019150368190038213156117c857600080fd5b8183823760009101908152919050565b600060018060a01b03808f1683528d60208401528c60408401528b60608401528a60808401528960a08401528860c08401528760e0840152866101008401528561012084015280851661014084015250610180610160830152612158610180830184612023565b9e9d5050505050505050505050505050565b60006020828403121561217c57600080fd5b5051919050565b818103818111156106cd576106cd612071565b600080858511156121a657600080fd5b838611156121b357600080fd5b5050820193919092039150565b600080600080608085870312156121d657600080fd5b84356121e181611cec565b93506020850135925060408501359150606085013567ffffffffffffffff81111561220b57600080fd5b61221787828801611e31565b91505092959194509250565b80820281158282048414176106cd576106cd612071565b600181815b8085111561227557816000190482111561225b5761225b612071565b8085161561226857918102915b93841c939080029061223f565b509250929050565b60008261228c575060016106cd565b81612299575060006106cd565b81600181146122af57600281146122b9576122d5565b60019150506106cd565b60ff8411156122ca576122ca612071565b50506001821b6106cd565b5060208310610133831016604e8410600b84101617156122f8575081810a6106cd565b612302838361223a565b806000190482111561231657612316612071565b029392505050565b600061164260ff84168361227d565b60008261234a57634e487b7160e01b600052601260045260246000fd5b500490565b600080600080600060a0868803121561236757600080fd5b85359450602086013561237981611cec565b9350604086013561238981611cec565b94979396509394606081013594506080013592915050565b7f416363657373436f6e74726f6c3a206163636f756e74200000000000000000008152600083516123d9816017850160208801611fff565b7001034b99036b4b9b9b4b733903937b6329607d1b601791840191820152835161240a816028840160208801611fff565b01602801949350505050565b6020815260006116426020830184612023565b60006020828403121561243b57600080fd5b8151801515811461164257600080fd5b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b60008161248657612486612071565b506000190190565b600082516124a0818460208701611fff565b919091019291505056fea264697066735822122036ed098ecb55575c70b0fd04faf3da8f12a6aa6012f9731d8656b7a44c197c8f64736f6c63430008110033";

type VerifyingPaymasterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VerifyingPaymasterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class VerifyingPaymaster__factory extends ContractFactory {
  constructor(...args: VerifyingPaymasterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _entryPoint: PromiseOrValue<string>,
    _owner: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<VerifyingPaymaster> {
    return super.deploy(
      _entryPoint,
      _owner,
      overrides || {}
    ) as Promise<VerifyingPaymaster>;
  }
  override getDeployTransaction(
    _entryPoint: PromiseOrValue<string>,
    _owner: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_entryPoint, _owner, overrides || {});
  }
  override attach(address: string): VerifyingPaymaster {
    return super.attach(address) as VerifyingPaymaster;
  }
  override connect(signer: Signer): VerifyingPaymaster__factory {
    return super.connect(signer) as VerifyingPaymaster__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VerifyingPaymasterInterface {
    return new utils.Interface(_abi) as VerifyingPaymasterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): VerifyingPaymaster {
    return new Contract(address, _abi, signerOrProvider) as VerifyingPaymaster;
  }
}
